1.SELECT * FROM customers WHERE country = 'Germany';
2.SELECT * FROM customers WHERE city = 'Berlin';
3.SELECT * FROM customers WHERE city = 'Berlin' AND country = 'Germany';
4.SELECT * FROM customers WHERE (city = 'Berlin' OR city = 'MÃ¼nchen') AND country = 'Germany';
5.SELECT * FROM customers WHERE country NOT IN ('Germany', 'USA');
6.SELECT * FROM customers ORDER BY country ASC;
7.SELECT * FROM customers ORDER BY country DESC;
8.SELECT * FROM customers ORDER BY country DESC, customer_name ASC;
9.SELECT MIN(price) FROM products;
10.SELECT MAX(price) FROM products;
11.SELECT COUNT(*) FROM products;
12.SELECT COUNT(*) FROM customers;
13.SELECT COUNT(*) FROM customers GROUP BY country;
14.SELECT COUNT(*), AVG(price) FROM products WHERE category = 1;
15.SELECT SUM(price) FROM products WHERE category = 2;
16.SELECT MAX(price) FROM products WHERE category IN (1, 2);
17.SELECT * FROM products WHERE price BETWEEN 10 AND 20;
18.SELECT * FROM products WHERE price NOT BETWEEN 10 AND 20;
19.SELECT * FROM products WHERE category IN (1, 2, 3);
20.SELECT * FROM orders WHERE shipper_id IN (1, 2, 3);
21.SELECT * FROM products WHERE price BETWEEN 10 AND 15 AND category NOT IN (1, 2, 3, 4);
22.SELECT * FROM orders WHERE order_date BETWEEN '1996-07-01' AND '1996-07-31';
23.SELECT * FROM orders WHERE customer_id IN (SELECT customer_id FROM customers WHERE customer_id BETWEEN 77 AND 90);
24.SELECT * FROM customers INNER JOIN orders ON customers.customer_id = orders.customer_id;
25.SELECT customers.*, COUNT(orders.order_id) AS 'Number of Orders' FROM customers LEFT JOIN orders ON customers.customer_id = orders.customer_id GROUP BY customers.customer_id;
26.SELECT * FROM customers INNER JOIN orders ON customers.customer_id = orders.customer_id;
